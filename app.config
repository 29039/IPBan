<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="LogFilesToParse" type="IPBan.LogFilesToParseConfigSectionHandler, IPBan"/>
    <section name="ExpressionsToBlock" type="IPBan.ExpressionsToBlockConfigSectionHandler, IPBan"/>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
  </configSections>

  <!-- A collection of log files to parse, these are polled periodically based on PingInterval for each log file -->
  <LogFilesToParse>
    <LogFiles>

      <!-- SSH failed logins, Ubuntu -->
      <LogFile>
        
        <!-- The file source (i.e. SSH, SMTP, etc.) -->
        <Source>SSH</Source>
        
        <!-- The folder and mask to watch for log files to parse - one entry per line -->
        <PathAndMask>
          /var/log/auth*.log
          /var/log/secure*
        </PathAndMask>

        <!--
          Regex for each file line to parse out the user name and ip address
          Note that you must use \s for space character as pattern white space is ignored
        -->
        <!--
        Example lines
        Feb 21 08:35:22 localhost sshd[5774]: Failed password for root from 116.31.116.24 port 29160 ssh2
        Jul  3 12:52:21 vps192513 sshd[16201]: Connection closed by 150.95.154.204 port 56032 [preauth] (no attempt to login after timeout)
        -->
        <Regex>
          <![CDATA[
            ^\s*\w+\s+\w+\s+[0-9:]+\s+\w+\s+sshd.*?\s+failed\s+password\s+for\s+(?<username>.+?)\s+from\s+(?<ipaddress>.+?)\s+port\s+[0-9]+\s+ssh2?\s*$|
            ^\s*\w+\s+\w+\s+[0-9:]+\s+\w+\s+sshd.*?\s+connection\s+closed\s+by\s+(?<ipaddress>.+?)\s+port\s+[0-9]+\s+\[preauth\]\s*$
          ]]>
        </Regex>

        <!-- Specify specific platforms here or . for all platforms (not recommended) - use Linux, MAC or Windows or Ubuntu, etc. -->
        <PlatformRegex>Linux</PlatformRegex>

        <!-- How often to parse and check for new files, etc. - in milliseconds -->
        <PingInterval>10000</PingInterval>

        <!-- 16 MB max size before deleting files and starting over -->
        <MaxFileSize>16777216</MaxFileSize>
        
      </LogFile>

    </LogFiles>
  </LogFilesToParse>

  <!--
    * WINDOWS ONLY *
    Setup expressions to block for Windows event viewer
    You may specify the keywords to look for as well as an array of ExpressionsToBlockGroup objects.
    In each group there is xpath and a regex.
    All must match in the event for it to be filtered, and at least one regex must have an ipaddress group to pull out the ip address to block.
  -->
  <ExpressionsToBlock>
    <Groups>

      <!-- This group will block audit failures from failed login attempts to Windows -->
      <Group>
        <Source>RDP</Source>
        <Keywords>0x8010000000000000</Keywords>
        <Path>Security</Path>
        <Expressions>
          <Expression>
            <XPath>//Data[@Name='IpAddress']</XPath>
            <Regex>
              <![CDATA[
                (?<ipaddress>.+)
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>

      <!-- This group will block audit failures from failed login attempts to Windows (Local network) -->
      <Group>
        <Source>RDP</Source>
        <Keywords>0x8010000000000000</Keywords>
        <Path>Security</Path>
        <Expressions>
          <Expression>
            <XPath>//Data[@Name='Workstation']</XPath>
            <Regex>
              <![CDATA[
                (?<ipaddress>.+)
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>

      <!-- This group will block audit failures from failed login attempts to Microsoft SQL Server -->
      <Group>
        <Source>MSSQL</Source>
        <Keywords>0x90000000000000</Keywords>
        <Path>System</Path>
        <Expressions>
          <Expression>
            <XPath>//Provider[@Name='MSSQLSERVER']</XPath>
            <Regex></Regex>
          </Expression>
          <Expression>
            <XPath>//Data</XPath>
            <Regex>
              <![CDATA[
                \[Client ?: ?(?<ipaddress>.*?)\]
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>
      <Group>
        <Source>MSSQL</Source>
        <Keywords>0x90000000000000</Keywords>
        <Path>Application</Path>
        <Expressions>
          <Expression>
            <XPath>//Provider[@Name='MSSQLSERVER']</XPath>
            <Regex></Regex>
          </Expression>
          <Expression>
            <XPath>//Data</XPath>
            <Regex>
              <![CDATA[
                \[Client ?: ?(?<ipaddress>.*?)\]
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>

      <!-- This group will block audit failures from failed login attempts to MySQL Server -->
      <Group>
        <Source>MySQL</Source>
        <Keywords>0x80000000000000</Keywords>
        <Path>Application</Path>
        <Expressions>
          <Expression>
            <XPath>//Provider[@Name='MySQL']</XPath>
            <Regex></Regex>
          </Expression>
          <Expression>
            <XPath>//Data</XPath>
            <Regex>
              <![CDATA[
                Access denied for user (?<username>.*?)'@'(?<ipaddress>.*?)'
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>
      
      <!-- This group will block audit failures from MS Exchange -->
      <Group>
        <Source>MSExchange</Source>
        <Keywords>0x80000000000000</Keywords>
        <Path>System</Path>
        <Expressions>
          <Expression>
            <XPath>//Provider[@Name='MSExchangeTransport']</XPath>
            <Regex></Regex>
          </Expression>
          <Expression>
            <XPath>//Data</XPath>
            <Regex>LogonDenied</Regex>
          </Expression>
          <Expression>
            <XPath>//Data</XPath>
            <Regex>
              <![CDATA[
                (?<ipaddress>.+)
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>
      
      <!-- This group will block audit dropped packet failures from firewall drops to Windows -->
      <Group>
        <Source>Firewall</Source>
        <Keywords>0x8010000000000001</Keywords>
        <Path>Security</Path>
        <Expressions>
          <Expression>
            <XPath>//EventID</XPath>
            <Regex>^(4625|5152)$</Regex>
          </Expression>
          <Expression>
            <XPath>//Data[@Name='SourceAddress']</XPath>
            <Regex>
              <![CDATA[
                (?<ipaddress>.+)
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>
    
      <!-- This group will block audit failures from failed login attempts to phpMyAdmin Web Interface -->
      <Group>
        <Source>phpMyAdmin</Source>
        <Keywords>0x80000000000000</Keywords>
        <Path>Application</Path>
        <Expressions>
          <Expression>
            <XPath>//Data</XPath>
            <Regex>phpMyAdmin</Regex>
          </Expression>
          <Expression>
            <XPath>//Data</XPath>
            <Regex>
              <![CDATA[
                user denied: (?<username>.*?)\(mysql-denied\) from *(?<ipaddress>.+)
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>
      
      <!--
        This group will block OpenSSH login failures
      -->
      <Group>
        <Source>SSH</Source>
        <Keywords>0x8000000000000000</Keywords>
        <Path>OpenSSH/Admin</Path>
        <Expressions>
          <Expression>
            <XPath>//Data[@Name='payload']</XPath>
            <Regex>
              <![CDATA[
                maximum authentication attempts exceeded for invalid user (?<username>.*?) from (?<ipaddress>.*?)\s
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>
      <Group>
        <Source>SSH</Source>
        <Keywords>0x4000000000000000</Keywords>
        <Path>OpenSSH/Operational</Path>
        <Expressions>
          <Expression>
            <XPath>//Data[@Name='payload']</XPath>
            <Regex>
              <![CDATA[
                Failed password for invalid user (?<username>.*?) from (?<ipaddress>.*?)\s
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>
      
      <!--
        This group will block NTLM login failures in the Applications and Services Logs > Microsoft-Windows-RemoteDesktopServices-RdpCoreTS/Operational log
        OpCode 14 indicates an invalid protocol, which is usually a sign of a hacker
      -->
      <Group>
        <Source>RDP</Source>
        <Keywords>0x4000000000000000</Keywords>

        <Path>Microsoft-Windows-RemoteDesktopServices-RdpCoreTS/Operational</Path>
        <Expressions>
          <Expression>
            <XPath>//Opcode</XPath>
            <Regex>
              <![CDATA[
                ^14$
              ]]>
            </Regex>
          </Expression>
          <Expression>
            <XPath>//Data[@Name='ClientIP' or @Name='IPString']</XPath>
            <Regex>
              <![CDATA[
                (?<ipaddress>.+)
              ]]>
            </Regex>
          </Expression>
        </Expressions>
      </Group>
    
    </Groups>
  </ExpressionsToBlock>

  <appSettings>

    <!-- Number of failed audits in the event viewer before banning the ip address -->
    <add key="FailedLoginAttemptsBeforeBan" value="5"/>

    <!-- The duration of time to ban an ip address (DD:HH:MM:SS) - 00:00:00:00 for forever -->
    <add key="BanTime" value="07:00:00:00"/>

    <!-- True to clear and unban all the ip addresses from the firewall upon restart, false otherwise -->
    <add key="ClearBannedIPAddressesOnRestart" value="false"/>

    <!-- The duration after the last failed login attempt that the ip is forgotten (count reset back to 0). Set to 00:00:00:00 to never forget an ip. (DD:HH:MM:SS) -->
    <add key="ExpireTime" value="01:00:00:00"/>

    <!-- The time between cycles to do house-keeping such as un-banning ip addresses, reloading config, etc. (DD:HH:MM:SS) -->
    <add key="CycleTime" value="00:00:00:15"/>

    <!-- The minimum time between failed login attempts for an ip address to increment the ban counter -->
    <add key="MinimumTimeBetweenFailedLoginAttempts" value="00:00:00:05"/>
    
    <!--
    Rule prefix name for Windows Firewall rules, must contain only A-Z, 0-9 and _
    It is recommended to never change this
    -->
    <add key="RuleName" value="IPBan_BlockIPAddresses_"/>

    <!-- Comma separated list of ip addresses OR DNS names that are never banned -->
    <add key="Whitelist" value="127.0.0.1,::1"/>

    <!--
      Regular expression for more advanced whitelisting. Shortcut: use * to allow any piece of an ip (i.e. 128.128.128.*).
      Sample regex that whitelists a few ips: ^(128\.128\.128\.*)|(99\.99\.99\.[0-9])$
      More info about regex: http://www.regular-expressions.info/    
    -->
    <add key="WhitelistRegex" value=""/>

    <!-- Comma separated list of ip addresses OR DNS names OR user names to always ban and NEVER unban -->
    <add key="Blacklist" value=""/>

    <!--
      Regular expression for more advanced blacklisting. Shortcut: use * to allow any piece of an ip, dns name or user name (i.e. 128.128.128.*).
      Sample regex that blacklists a few ips: ^(128\.128\.128\.*)|(99\.99\.99\.[0-9])$
      More info about regex: http://www.regular-expressions.info/    
    -->
    <add key="BlacklistRegex" value=""/>

    <!---
      Run an external process when a ban occurs. Separate the process and any arguments with a pipe (|). ###IPADDRESS### will be replaced with the actual IP which was banned. The pipe is required.
      Example: c:\system files\on_ip_banned.exe|###IPADDRESS### -q
    -->
    <add key="ProcessToRunOnBan" value=""/>

    <!-- 
      Url to query to get the external ip address, the url should return a string which is the external ip address.
    -->
    <add key="ExternalIPAddressUrl" value="http://checkip.amazonaws.com/"/>
    
    <!--
      A url to get when the service updates, empty for none. MACHINENAME is fqdn. Guid is extra unique identifier if needed.
      Example: http://192.168.1.2/ipban/update?ip=###IPADDRESS###&amp;name=###MACHINENAME###&amp;version=###VERSION###&amp;guid=###GUID###&amp;osname=###OSNAME###&amp;osversion=###OSVERSION###
    -->
    <add key="GetUrlUpdate" value=""/>

    <!--
      A url to get when the service starts, empty for none.
      Example: http://192.168.1.2/ipban/start?ip=###IPADDRESS###&amp;name=###MACHINENAME###&amp;version=###VERSION###&amp;guid=###GUID###&amp;osname=###OSNAME###&amp;osversion=###OSVERSION###
    -->
    <add key="GetUrlStart" value=""/>

    <!--
      A url to get when the service stops, empty for none.
      Example: http://192.168.1.2/ipban/stop?ip=###IPADDRESS###&amp;name=###MACHINENAME###&amp;version=###VERSION###&amp;guid=###GUID###&amp;osname=###OSNAME###&amp;osversion=###OSVERSION###
    -->
    <add key="GetUrlStop" value=""/>

    <!--
      A url to get config file from, empty for none.
      Example: http://192.168.1.2/ipban/config?ip=###IPADDRESS###&amp;name=###MACHINENAME###&amp;version=###VERSION###&amp;guid=###GUID###&amp;osname=###OSNAME###&amp;osversion=###OSVERSION###
    -->
    <add key="GetUrlConfig" value=""/>

  </appSettings>

  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" throwExceptions="false" internalLogToConsole="false" internalLogToConsoleError="false" internalLogLevel="Trace">
    <targets>
      <target name="logfile" xsi:type="File" fileName="${basedir}/logfile.txt" archiveNumbering="Sequence" archiveEvery="Day" maxArchiveFiles="28" encoding="UTF-8"/>
      <target name="console" xsi:type="Console"/>
    </targets>
    <rules>
      <logger name="*" minlevel="Warn" writeTo="logfile"/>
      <logger name="*" minlevel="Warn" writeTo="console"/>
    </rules>
  </nlog>

</configuration>
